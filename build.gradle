plugins {
    id 'net.ltgt.errorprone' version '0.0.13'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

ext {
    compatibilityVersion = '1.8'
    snapshotRepoPass = project.hasProperty('snapshotRepoPass') ? project.getProperty('snapshotRepoPass') : ''
    isReleaseVersion = !version.endsWith('SNAPSHOT')
}

sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

repositories {
    mavenCentral()
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    version = 4.7
}

dependencies {
    errorprone 'com.google.errorprone:error_prone_core:2.2.0'

    compile 'co.nstant.in:cbor:0.8'
    compile 'com.google.guava:guava:24.1-jre'
    compile 'com.google.http-client:google-http-client-jackson2:1.23.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.9.5'
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
    compile 'javax.inject:javax.inject:1'
    compile 'org.apache.httpcomponents:httpclient:4.5.5'
    compile 'org.bitbucket.b_c:jose4j:0.6.3'
    compile 'org.bouncycastle:bcprov-jdk15on:1.59'

    testCompile 'org.junit.jupiter:junit-jupiter-params:5.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

test {
    useJUnitPlatform()
}

uploadArchives {
    repositories {
        mavenDeployer {
            // POM signature
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Target repository
            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: 'kasecato', password: snapshotRepoPass)
            }

            pom.project {
                groupId 'com.github.kasecato'
                artifactId 'webauthn-server-core'
                version '0.0.1'

                name 'WebAuthn Server Core'
                description 'A Java Relying Party implementation of the WebAuthn specification.'
                url 'https://github.com/kasecato/webauthndemo/tree/webauthn-server-core'
                inceptionYear '2018'
                packaging 'jar'

                scm {
                    url 'https://github.com/kasecato/webauthndemo'
                    connection 'scm:https://kasecato@github.com/kasecato/webauthndemo.git'
                    developerConnection 'scm:git://github.com/kasecato/webauthndemo.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'kasecato'
                        name = 'Keisuke Kato'
                        email = 'kasecato@gmail.com'
                    }
                }
            }
        }
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar, javadocJar, sourcesJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}